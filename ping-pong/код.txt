from pygame import *

WIDTH = 600
HEIGHT = 600
FPS = 60
GOAL = 10
LIFE = 3



hero_img = 'pavuk.png'
background_img = 'background.png'
ball_img = 'pumpkin.png'

background = transform.scale(image.load(background_img), (WIDTH, HEIGHT))
window = display.set_mode((WIDTH, HEIGHT))
display.set_caption('PING-PONG')
clock = time.Clock()

font.init()
font1 = font.Font(None, 36)
lose2 = font1.render('PLAYER 1 LOOSE!', True, (255, 255, 255))
lose1 = font1.render('PLAYER 2 LOOSE!', True, (255, 255, 255))

speed_x = 3
speed_y = 3

class GameSprite(sprite.Sprite):
    def __init__(self, img: str, x: int, y: int, speed: int, w: int, h: int, ):
        super().__init__()
        self.image = transform.scale(image.load(img), (w, h))
        self.rect = self.image.get_rect()
        self.rect.x = x
        self.rect.y = y
        self.speed = speed

    def reset(self):
        window.blit(self.image, (self.rect.x, self.rect.y))


class Player(GameSprite):
    def update_r(self):
        keys = key.get_pressed()
        if keys[K_UP] and self.rect.y > 5:
            self.rect.y -= self.speed
        if keys[K_DOWN] and self.rect.y < HEIGHT - 80:
            self.rect.y += self.speed
    def update_l(self):
        keys = key.get_pressed()
        if keys[K_w] and self.rect.y > 5:
            self.rect.y -= self.speed
        if keys[K_s] and self.rect.y < HEIGHT - 80:
            self.rect.y += self.speed

racket1 = Player(hero_img, 30, 200, 4, 50, 170)
racket2 = Player(hero_img, 520, 200, 4, 50, 170)
ball = GameSprite(ball_img, 200, 200, 3, 200, 200)

run = True
finish = False



while run:
    for e in event.get():
        if e.type == QUIT:
            run = False
    if finish != True:
        window.blit(background, (0, 0))
        racket2.update_r()
        racket1.update_l()
        ball.rect.x += speed_x
        ball.rect.y += speed_y

        if sprite.collide_rect(racket1, ball) or sprite.collide_rect(racket2, ball):
            speed_x *= -1
            speed_y *= 1
        if ball.rect.y > HEIGHT - 50 or ball.rect.y < 0:
            speed_y *= -1
        if ball.rect.x < 0:
            finish = True
            window.blit(lose1,(200, 200))
            run = False

        if ball.rect.x > WIDTH:
            finish = True
            window.blit(lose2,(200, 200))


        racket1.reset()
        racket2.reset()
        ball.reset()

    clock.tick(FPS)
    display.update()

        ball.rect.y += speed_y

        if sprite.collide_rect(racket1, ball) or sprite.collide_rect(racket2, ball):
            speed_x *= -1
            speed_y *= 1
        if ball.rect.y > HEIGHT - 50 or ball.rect.y < 0:
            speed_y *= -1
        if ball.rect.x < 0:
            finish = True
            window.blit(lose1,(200, 200))
            run = False

        if ball.rect.x > WIDTH:
            finish = True
            window.blit(lose2,(200, 200))
            run = False

        racket1.reset()
        racket2.reset()
        ball.reset()

    clock.tick(FPS)
    display.update()